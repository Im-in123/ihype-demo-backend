# Generated by Django 3.2.5 on 2021-07-17 18:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='episode', max_length=255)),
                ('episode_num', models.IntegerField(default=1)),
                ('season_num', models.IntegerField(default=1)),
                ('cover', models.ImageField(default='default.jpg', upload_to='episode_covers')),
                ('video', models.FileField(blank=True, null=True, upload_to='episodes_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(default='', editable=False, max_length=255)),
                ('cover', models.ImageField(default='default.jpg', upload_to='movie_covers')),
                ('background_big_screen', models.ImageField(default='default.jpg', upload_to='movie_background_covers_bigscreen')),
                ('background_small_screen', models.ImageField(default='default.jpg', upload_to='movie_background_covers_smallscreen')),
                ('video', models.FileField(blank=True, null=True, upload_to='movies_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('trailer', models.FileField(blank=True, null=True, upload_to='movie_trailer', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=700, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('core_type', models.CharField(choices=[('Series', 'Series'), ('Movie', 'Movie')], max_length=11)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('season_num', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('episodes', models.ManyToManyField(blank=True, related_name='series_episodes', to='video_main.Episode')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(default='', editable=False, max_length=255)),
                ('cover', models.ImageField(default='default.jpg', upload_to='series_covers')),
                ('background_big_screen', models.ImageField(default='default.jpg', upload_to='series_background_covers_bigscreen')),
                ('background_small_screen', models.ImageField(default='default.jpg', upload_to='series_background_covers_smallscreen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=700, null=True)),
                ('trailer', models.FileField(blank=True, null=True, upload_to='series_trailer', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('core_type', models.CharField(choices=[('Series', 'Series'), ('Movie', 'Movie')], max_length=11)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series_author', to=settings.AUTH_USER_MODEL)),
                ('season', models.ManyToManyField(blank=True, related_name='series_seasons', to='video_main.Season')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('favorite_movie', models.ManyToManyField(blank=True, related_name='user_series_watchlist', to='video_main.Movie')),
                ('favorite_series', models.ManyToManyField(blank=True, related_name='user_series_watchlist', to='video_main.Series')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('videotype', models.CharField(choices=[('Series', 'Series'), ('Movie', 'Movie')], max_length=11)),
                ('movie', models.ManyToManyField(blank=True, related_name='second_video_movies', to='video_main.Movie')),
                ('series', models.ManyToManyField(blank=True, related_name='second_video_series', to='video_main.Series')),
            ],
        ),
        migrations.AddField(
            model_name='series',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='series_tags', to='video_main.Tag'),
        ),
        migrations.AddField(
            model_name='season',
            name='series',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='series_link', to='video_main.series'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='movie_tags', to='video_main.Tag'),
        ),
        migrations.AddField(
            model_name='episode',
            name='season',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='season_link', to='video_main.season'),
        ),
    ]
